# This is a basic workflow that is manually triggered

name: External plugin workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  schedule:
    - cron: "0 0 1 */6 *"
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deployproject:
    strategy:
      matrix:
        include:
        # define the list of repos here
        - repo: animate-css/animate.css
          repo_name: animate.css
          branch: main
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out ckeditor/ckeditor4
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo }}
          path: ${{ matrix.repo_name }}
          fetch-depth: 0
      # Checks out newren/git-filter-repo
      - name: Checkout git-filter-repo
        uses: actions/checkout@v2
        with:
          repository: newren/git-filter-repo
          path: git-filter-repo
      # Checks out this repo
      - name: Checkout this repo
        uses: actions/checkout@v2
        with:
          path: runner
      # Runs a single command using the runners shell
      - name: Prepare git-filter-repo
        run: |
          sudo cp -av git-filter-repo/git-filter-repo $(git --exec-path)
          echo "### Placing $(git --exec-path)/git-filter-repo into $(python -c "import site; print(site.getsitepackages()[-1])")/git_filter_repo.py"
          sudo mkdir -p $(python -c "import site; print(site.getsitepackages()[-1])")
          sudo ln -sv $(git --exec-path)/git-filter-repo $(python -c "import site; print(site.getsitepackages()[-1])")/git_filter_repo.py
        shell: bash
      # Generate repository
      - name: Generate repo
        env:
          GITHUB_TOKEN: ${{ secrets.OPENSSH_KEY }}
        run: |
          echo "### Processing external project: ${{ matrix.repo_name }}"
          if [ ! -d ${{ matrix.repo_name }} ]; then
            mkdir -p ${{ matrix.repo_name }}
            pushd ${{ matrix.repo_name }} > /dev/null
            git init
            git remote add origin git@github.com:drupal-shimmy/${{ matrix.repo_name }}.git
            popd > /dev/null
          fi
          pushd ${{ matrix.repo_name }} > /dev/null
          echo ""
          echo "### Pruning unneeded JSON for repo ${{ matrix.repo_name }}"
          git filter-repo --force --preserve-commit-hashes --path-rename composer.json:legacy.composer.json --path-rename package.json:legacy.package.json
          git checkout ${{ matrix.branch }}
          popd > /dev/null
        shell: bash
      # Generate JSON
      - name: Generate JSON
        env:
          GITHUB_TOKEN: ${{ secrets.OPENSSH_KEY }}
        run: |
          HOME="$PWD"
          pushd ${{ matrix.repo_name }} > /dev/null
          for file in composer.json package.json
          do
            if [ ! -f ${file} ]; then
              if [ -f "$HOME/runner/template/external/${file}" ]; then
              echo ""
              echo "### Processing ${file}..."
                sed -e "s|__PATH__|${{ matrix.repo }}|g" -e "s/__PLUGIN__/${{ matrix.repo_name }}/g" $HOME/runner/template/external/${file} > ${file}
                echo ""
                echo "### Generated ${{ matrix.repo_name }}/${file} from $HOME/runner/template/external/${file}"
                FILENAME="${file}"
                git filter-repo --force --commit-callback "if not commit.parents: commit.file_changes.append(FileChange(b'M', b'$FILENAME', b'$(git hash-object -w $FILENAME)', b'100644'))"
                echo ""
                echo "### filter-repo added ${file} in!"
              else
                echo ""
                echo "### Sorry, ${file} template not found in $HOME/runner/template/external."
              fi
            fi
          done
          echo "### Sanity checking tag length per GH002"
          # Now, sanity-check tags.
          for a_tag in $(git tag)
          do
            echo "### Checking $a_tag"
            # if you want to suppress @... part
            check=${#a_tag}
            if [ $check -ge 40 ]; then
              b_tag="${a_tag:0:39}"
              echo "### Truncating $a_tag to $b_tag"
              git filter-repo --force --tag-rename ${a_tag}:${b_tag}
            else
              echo "### $a_tag is compatible with GitHub"
            fi
          done
          popd > /dev/null
        shell: bash
      # Commit to Drupal
      - name: Commit to Drupal Shimmy
        env:
          GITHUB_TOKEN: ${{ secrets.OPENSSH_KEY }}
        run: |
          pushd ${{ matrix.repo_name }} > /dev/null
          if [[ -z $GITHUB_TOKEN ]]; then
            echo "SSH key not active, skipping."
          else
            echo "### Importing SSH key to $HOME/sshkey"
            key="$HOME/sshkey"
            echo "$GITHUB_TOKEN" >> "$key"
            chmod 0600 "$key"
            echo ""
            echo "### Adding SSH key from $HOME/sshkey to bash"
            eval `ssh-agent -s`
            ssh-add "$key"
            echo ""
            git remote add origin git@github.com:drupal-shimmy/${{ matrix.repo_name }}.git
            echo "### Sniffing remotes:"
            git remote -v
            echo ""
            echo "### Writing to git@github.com:drupal-shimmy/${{ matrix.repo_name }}.git"
            git config branch.${{ matrix.branch }}.remote origin
            git push -u -f origin ${{ matrix.branch }} --tags
          fi
          popd > /dev/null
        shell: bash
